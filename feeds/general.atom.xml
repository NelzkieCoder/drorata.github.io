<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Dr. Dror - General</title><link href="http://drorata.github.io/" rel="alternate"></link><link href="http://drorata.github.io/feeds/general.atom.xml" rel="self"></link><id>http://drorata.github.io/</id><updated>2017-03-22T00:00:00+01:00</updated><entry><title>Setting new computer</title><link href="http://drorata.github.io/posts/2017/Mar/16/setting-new-computer/" rel="alternate"></link><published>2017-03-16T00:00:00+01:00</published><updated>2017-03-22T00:00:00+01:00</updated><author><name>Dror Atariah</name></author><id>tag:drorata.github.io,2017-03-16:/posts/2017/Mar/16/setting-new-computer/</id><summary type="html">&lt;p&gt;Mostly notes for myself on what items I installed on a new machine. You might be interested as well.&lt;/p&gt;</summary><content type="html">&lt;h1 id="straightforward"&gt;Straightforward&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Docker&lt;/code&gt; Time to start using it, right?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DropboxInstaller&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Franz&lt;/code&gt; a universal messenger&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Spotify&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;LibreOffice&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;MacPorts&lt;/code&gt; For this one you'd need to install XCode related stuff&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Skim&lt;/code&gt; Much better than the built in Preview&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Skype&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Slack&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Spectacle&lt;/code&gt; Super useful for windows management using the keyboard&lt;/li&gt;
&lt;li&gt;&lt;code&gt;atom&lt;/code&gt; Well, this is my editor of choice for the past 4 months. I'm not going to change it.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Chrome&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iTerm2&lt;/code&gt;. However, I'm going to try out &lt;code&gt;Hyper&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Google drive&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mactex&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nteract&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vlc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Anaconda python distribution&lt;/li&gt;
&lt;li&gt;In addition I installed &lt;a href="https://github.com/prat0318/json_resume"&gt;&lt;code&gt;json_resume&lt;/code&gt;&lt;/a&gt; which I use to build my CV.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="some-more-remarks"&gt;Some more remarks&lt;/h1&gt;
&lt;h2 id="setting-of-atom"&gt;Setting of Atom&lt;/h2&gt;
&lt;p&gt;For this I discovered the wonderful plugin &lt;a href="https://atom.io/packages/sync-settings"&gt;sync-settings&lt;/a&gt;.
This allowed easy copying of the settings and packages from my other box.&lt;/p&gt;
&lt;h2 id="improved-commandline"&gt;Improved commandline&lt;/h2&gt;
&lt;p&gt;To that end I use &lt;a href="https://github.com/banga/powerline-shell"&gt;powerline-shell&lt;/a&gt; which I strongly recommend.&lt;/p&gt;
&lt;h2 id="enabling-pelican"&gt;Enabling Pelican&lt;/h2&gt;
&lt;p&gt;Pelican is easy to install using &lt;code&gt;pip&lt;/code&gt;.
However, in addition I had to install the &lt;code&gt;Markdown&lt;/code&gt; module.&lt;/p&gt;
&lt;h2 id="mapping-to"&gt;Mapping &lt;code&gt;§&lt;/code&gt; to &lt;code&gt;`&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;I got an international English keyboard.
This means that the upper left key (right under the &lt;code&gt;ESC&lt;/code&gt;) is mapped to &lt;code&gt;§&lt;/code&gt; and &lt;code&gt;±&lt;/code&gt;.
I lived so long without using these symbols on a regular basis, and thus I decided to map this key to the regular backtick and tilde (&lt;code&gt;~&lt;/code&gt;).
To that end I used the &lt;a href="https://github.com/tekezo/Karabiner-Elements"&gt;Karabiner-Elements&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="vim-syntax-highlighting"&gt;&lt;code&gt;vim&lt;/code&gt; syntax highlighting&lt;/h2&gt;
&lt;p&gt;I'm using &lt;code&gt;vim&lt;/code&gt; as the editor in the console (mostly when it comes to commit messages for git).
Still, coloring the editor is nice.
I Simply added &lt;code&gt;syntax on&lt;/code&gt; to &lt;code&gt;~/.vimrc&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id="nb-1"&gt;N.B. 1&lt;/h2&gt;
&lt;p&gt;After couple of days, as always, there are some additional items to mention:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/Anaconda-Platform/nb_conda_kernels"&gt;nb conda kernels&lt;/a&gt; to treat Conda environments as Jupyter kernels&lt;/li&gt;
&lt;li&gt;For &lt;a href="http://scikit-learn.org/stable/modules/tree.html#classification"&gt;decision trees visualization&lt;/a&gt; I had to install &lt;code&gt;GraphViz&lt;/code&gt; and &lt;code&gt;pydotplus&lt;/code&gt;. The former using MacPorts and the latter using &lt;code&gt;conda install -c conda-forge pydotplus&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pandoc.org/"&gt;&lt;code&gt;pandoc&lt;/code&gt;&lt;/a&gt; is a nice to have around&lt;/li&gt;
&lt;li&gt;Similarly, &lt;a href="https://github.com/stedolan/jq/wiki/Installation"&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt; is very important to have around; simply using MacPorts. In addition, &lt;a href="https://beyondgrep.com/"&gt;'ack'&lt;/a&gt; is worthy installing&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="nb-2"&gt;N.B. 2&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;How could I forget, spell checking for Jupyter notebooks and other extensions are a must. This is rather straightforward as described &lt;a href="https://github.com/ipython-contrib/jupyter_contrib_nbextensions"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="IT"></category><category term="computer"></category><category term="apps"></category><category term="settings"></category><category term="superuser"></category><category term="python"></category></entry><entry><title>Parasitic numbers - did you know?</title><link href="http://drorata.github.io/posts/2017/Jan/30/parasitic-numbers-did-you-know/" rel="alternate"></link><published>2017-01-30T00:00:00+01:00</published><updated>2017-01-30T00:00:00+01:00</updated><author><name>Dror Atariah</name></author><id>tag:drorata.github.io,2017-01-30:/posts/2017/Jan/30/parasitic-numbers-did-you-know/</id><summary type="html">&lt;p&gt;Just learned about a new kind of numbers&lt;/p&gt;</summary><content type="html">&lt;p&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h1 id="Minimal-parasitic-number"&gt;Minimal parasitic number&lt;a class="anchor-link" href="#Minimal-parasitic-number"&gt;&amp;#182;&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;One of the things I like so much about math is that you always get to know a new concept.
Recently, I learned about &lt;a href="https://en.wikipedia.org/wiki/Parasitic_number"&gt;parasitic numbers&lt;/a&gt;.
I was asked what is the minimal parasitic 4-number.
So, I wrote down the following simple code, and found out:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[1]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;new_num&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;n_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;res&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n_str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;n_str&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;res&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[2]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;is_num&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;new_n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new_num&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;new_n&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;div class="cell border-box-sizing code_cell rendered"&gt;
&lt;div class="input"&gt;
&lt;div class="prompt input_prompt"&gt;In&amp;nbsp;[3]:&lt;/div&gt;
&lt;div class="inner_cell"&gt;
    &lt;div class="input_area"&gt;
&lt;div class=" highlight hl-ipython3"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;is_num&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class="output_wrapper"&gt;
&lt;div class="output"&gt;


&lt;div class="output_area"&gt;&lt;div class="prompt"&gt;&lt;/div&gt;
&lt;div class="output_subarea output_stream output_stdout output_text"&gt;
&lt;pre&gt;0
102564
128205
153846
179487
205128
230769
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;&lt;/p&gt;</content><category term="math"></category></entry><entry><title>First post</title><link href="http://drorata.github.io/posts/2017/Jan/13/first-post/" rel="alternate"></link><published>2017-01-13T13:30:00+01:00</published><updated>2017-01-13T13:30:00+01:00</updated><author><name>Dror Atariah</name></author><id>tag:drorata.github.io,2017-01-13:/posts/2017/Jan/13/first-post/</id><summary type="html">&lt;h1 id="trying-to-move-to-pelican"&gt;Trying to move to &lt;a href="https://blog.getpelican.com/"&gt;pelican&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Following is a review of my favorite mechanical keyboard.&lt;/p&gt;</summary><content type="html">&lt;h1 id="trying-to-move-to-pelican"&gt;Trying to move to &lt;a href="https://blog.getpelican.com/"&gt;pelican&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Following is a review of my favorite mechanical keyboard.&lt;/p&gt;</content></entry></feed>